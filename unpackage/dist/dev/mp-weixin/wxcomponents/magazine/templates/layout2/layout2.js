"use strict";
Component({
    properties: {
        config: {
            type: Object,
            value: null
        }
    },
    data: {
        contents: [],
        showPop: false,
        arrowStyle: '',
        popAnim: '',
        parallaxAnim: '',
        popStyle: '',
    },
    observers: {
        'config': function ({ content, text_style }) {
            const isBottom = text_style === 5;
            const posName = isBottom ? 'bottom' : 'top';
            const per = isBottom ? '100%' : '-100%';
            const popStyle = `${posName}:0rpx;transform:translate(0,${per});`;
            const contents = content.split('\n');
            this.setData({
                contents,
                popStyle,
                isBottom
            });
            this.setArrowStyle();
        },
        'showPop': function (b) {
            const isBottom = this.data.isBottom;
            const posName = isBottom ? 'bottom' : 'top';
            const name = `${b ? 'show' : 'hide'}-${posName}`;
            const popAnim = `animation: ${name} 0.5s ease 1 forwards;`;
            const parallaxAnim = ``;
            this.setData({
                popAnim,
                parallaxAnim
            });
        },
    },
    methods: {
        setFrame() { },
        setEnter() { },
        setExit() {
        },
        onSwitchPop() {
            this.setData({
                showPop: !this.data.showPop
            });
            this.setArrowStyle();
        },
        setArrowStyle() {
            const s = this.data.showPop;
            const isBottom = this.data.isBottom;
            const posName = isBottom ? 'bottom' : 'top';
            const scale = ((s && isBottom) || !(s || isBottom)) ? 1 : -1;
            const arrowStyle = `${posName}:100%;transform: scaleY(${scale});`;
            this.setData({
                arrowStyle
            });
        },
        onTouchStart(e) {
            const { pageY } = e.touches[0];
            this.setData({
                touchPos: pageY,
                touchTs: Date.now(),
            });
        },
        onTouchEnd(e) {
            const { pageY } = e.changedTouches[0];
            const ts = Date.now();
            const { touchPos, touchTs } = this.data;
            let dis = pageY - touchPos;
            if ((ts - touchTs < 1000) && Math.abs(dis) > 60) {
                this.handleSlide(dis > 0);
            }
        },
        handleSlide(isDown) {
            const s = this.data.showPop;
            const isBottom = this.data.isBottom;
            const isArrowDown = ((s && isBottom) || !(s || isBottom));
            if (isArrowDown === isDown) {
                this.onSwitchPop();
            }
        },
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5b3V0Mi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImxheW91dDIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLFNBQVMsQ0FBQztJQUdSLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRTtZQUNOLElBQUksRUFBRSxNQUFNO1lBQ1osS0FBSyxFQUFFLElBQUk7U0FDWjtLQUNGO0lBR0QsSUFBSSxFQUFFO1FBQ0osUUFBUSxFQUFFLEVBQUU7UUFDWixPQUFPLEVBQUUsS0FBSztRQUVkLFVBQVUsRUFBRSxFQUFFO1FBRWQsT0FBTyxFQUFFLEVBQUU7UUFDWCxZQUFZLEVBQUUsRUFBRTtRQUVoQixRQUFRLEVBQUUsRUFBRTtLQUNiO0lBRUQsU0FBUyxFQUFFO1FBQ1QsUUFBUSxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFO1lBQ3pDLE1BQU0sUUFBUSxHQUFHLFVBQVUsS0FBSyxDQUFDLENBQUE7WUFDakMsTUFBTSxPQUFPLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQTtZQUMzQyxNQUFNLEdBQUcsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFBO1lBQ3ZDLE1BQU0sUUFBUSxHQUFHLEdBQUcsT0FBTywrQkFBK0IsR0FBRyxJQUFJLENBQUE7WUFDakUsTUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQTtZQUNwQyxJQUFJLENBQUMsT0FBTyxDQUFDO2dCQUNYLFFBQVE7Z0JBQ1IsUUFBUTtnQkFDUixRQUFRO2FBQ1QsQ0FBQyxDQUFBO1lBQ0YsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFBO1FBQ3RCLENBQUM7UUFDRCxTQUFTLEVBQUUsVUFBVSxDQUFDO1lBQ3BCLE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFBO1lBQ25DLE1BQU0sT0FBTyxHQUFHLFFB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QUFXLEVBQUUsQ0FBQTthQUNuQjtRQUNILENBQUM7S0FDRjtDQUVGLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIkNvbXBvbmVudCh7XG5cbiAgLyoqIOe7hOS7tueahOWxnuaAp+WIl+ihqCAqL1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgY29uZmlnOiB7XG4gICAgICB0eXBlOiBPYmplY3QsXG4gICAgICB2YWx1ZTogbnVsbFxuICAgIH1cbiAgfSxcblxuICAvKiog57uE5Lu255qE5Yid5aeL5pWw5o2uICovXG4gIGRhdGE6IHtcbiAgICBjb250ZW50czogW10sXG4gICAgc2hvd1BvcDogZmFsc2UsXG4gICAgLyoqIOeureWktOWKqOeUu+agt+W8jyAqL1xuICAgIGFycm93U3R5bGU6ICcnLFxuICAgIC8qKiBwb3DliqjnlLvnsbsgKi9cbiAgICBwb3BBbmltOiAnJyxcbiAgICBwYXJhbGxheEFuaW06ICcnLFxuICAgIC8qKiBwb3Dln7rnoYDmoLflvI8gKi9cbiAgICBwb3BTdHlsZTogJycsXG4gIH0sXG5cbiAgb2JzZXJ2ZXJzOiB7XG4gICAgJ2NvbmZpZyc6IGZ1bmN0aW9uICh7IGNvbnRlbnQsIHRleHRfc3R5bGUgfSkge1xuICAgICAgY29uc3QgaXNCb3R0b20gPSB0ZXh0X3N0eWxlID09PSA1XG4gICAgICBjb25zdCBwb3NOYW1lID0gaXNCb3R0b20gPyAnYm90dG9tJyA6ICd0b3AnXG4gICAgICBjb25zdCBwZXIgPSBpc0JvdHRvbSA/ICcxMDAlJyA6ICctMTAwJSdcbiAgICAgIGNvbnN0IHBvcFN0eWxlID0gYCR7cG9zTmFtZX06MHJweDt0cmFuc2Zvcm06dHJhbnNsYXRlKDAsJHtwZXJ9KTtgXG4gICAgICBjb25zdCBjb250ZW50cyA9IGNvbnRlbnQuc3BsaXQoJ1xcbicpXG4gICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICBjb250ZW50cyxcbiAgICAgICAgcG9wU3R5bGUsXG4gICAgICAgIGlzQm90dG9tXG4gICAgICB9KVxuICAgICAgdGhpcy5zZXRBcnJvd1N0eWxlKClcbiAgICB9LFxuICAgICdzaG93UG9wJzogZnVuY3Rpb24gKGIpIHtcbiAgICAgIGNvbnN0IGlzQm90dG9tID0gdGhpcy5kYXRhLmlzQm90dG9tXG4gICAgICBjb25zdCBwb3NOYW1lID0gaXNCb3R0b20gPyAnYm90dG9tJyA6ICd0b3AnXG4gICAgICBjb25zdCBuYW1lID0gYCR7YiA/ICdzaG93JyA6ICdoaWRlJ30tJHtwb3NOYW1lfWBcbiAgICAgIGNvbnN0IHBvcEFuaW0gPSBgYW5pbWF0aW9uOiAke25hbWV9IDAuNXMgZWFzZSAxIGZvcndhcmRzO2BcbiAgICAgIC8vIGNvbnN0IHBhcmFsbGF4QW5pbSA9IGBhbmltYXRpb246IHBhcmFsbGF4LSR7bmFtZX0gMC41cyBlYXNlIDEgZm9yd2FyZHM7YFxuICAgICAgY29uc3QgcGFyYWxsYXhBbmltID0gYGBcbiAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgIHBvcEFuaW0sXG4gICAgICAgIHBhcmFsbGF4QW5pbVxuICAgICAgfSlcbiAgICB9LFxuICB9LFxuXG4gIC8qKiDnu4Tku7bnmoTmlrnms5XliJfooaggKi9cbiAgbWV0aG9kczoge1xuICAgIC8qKiDov5vlhaXlkozpgIDlh7rnmoTnvJPliqjliqjnlLsgKi9cbiAgICBzZXRGcmFtZSgpIHsgfSxcbiAgICAvKiog6aG16Z2i6L+b5YWlICovXG4gICAgc2V0RW50ZXIoKSB7IH0sXG4gICAgLyoqIOmhtemdoumAgOWHuiAqL1xuICAgIHNldEV4aXQoKSB7XG4gICAgICAvLyBpZiAodGhpcy5kYXRhLnNob3dQb3ApIHtcbiAgICAgIC8vICAgdGhpcy5vblN3aXRjaFBvcCgpXG4gICAgICAvLyB9XG4gICAgfSxcbiAgICAvKiog5bGV5byA5oiW5pS26LW3cG9wICovXG4gICAgb25Td2l0Y2hQb3AoKSB7XG4gICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICBzaG93UG9wOiAhdGhpcy5kYXRhLnNob3dQb3BcbiAgICAgIH0pXG4gICAgICB0aGlzLnNldEFycm93U3R5bGUoKVxuICAgIH0sXG4gICAgLyoqIOiuvue9rueureWktOagt+W8jyAqL1xuICAgIHNldEFycm93U3R5bGUoKSB7XG4gICAgICBjb25zdCBzID0gdGhpcy5kYXRhLnNob3dQb3BcbiAgICAgIGNvbnN0IGlzQm90dG9tID0gdGhpcy5kYXRhLmlzQm90dG9tXG4gICAgICBjb25zdCBwb3NOYW1lID0gaXNCb3R0b20gPyAnYm90dG9tJyA6ICd0b3AnXG4gICAgICBjb25zdCBzY2FsZSA9ICgocyAmJiBpc0JvdHRvbSkgfHwgIShzIHx8IGlzQm90dG9tKSkgPyAxIDogLTFcbiAgICAgIGNvbnN0IGFycm93U3R5bGUgPSBgJHtwb3NOYW1lfToxMDAlO3RyYW5zZm9ybTogc2NhbGVZKCR7c2NhbGV9KTtgXG4gICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICBhcnJvd1N0eWxlXG4gICAgICB9KVxuICAgIH0sXG4gICAgLyoqIOa7keWKqOW8gOWniyAqL1xuICAgIG9uVG91Y2hTdGFydChlKSB7XG4gICAgICBjb25zdCB7IHBhZ2VZIH0gPSBlLnRvdWNoZXNbMF1cbiAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgIHRvdWNoUG9zOiBwYWdlWSxcbiAgICAgICAgdG91Y2hUczogRGF0ZS5ub3coKSxcbiAgICAgIH0pXG4gICAgfSxcbiAgICAvKiog5ruR5Yqo57uT5p2fICovXG4gICAgb25Ub3VjaEVuZChlKSB7XG4gICAgICBjb25zdCB7IHBhZ2VZIH0gPSBlLmNoYW5nZWRUb3VjaGVzWzBdXG4gICAgICBjb25zdCB0cyA9IERhdGUubm93KClcbiAgICAgIGNvbnN0IHsgdG91Y2hQb3MsIHRvdWNoVHMgfSA9IHRoaXMuZGF0YVxuICAgICAgbGV0IGRpcyA9IHBhZ2VZIC0gdG91Y2hQb3NcbiAgICAgIGlmICgodHMgLSB0b3VjaFRzIDwgMTAwMCkgJiYgTWF0aC5hYnMoZGlzKSA+IDYwKSB7XG4gICAgICAgIHRoaXMuaGFuZGxlU2xpZGUoZGlzID4gMClcbiAgICAgIH1cbiAgICB9LFxuICAgIC8qKiDlpITnkIbmu5Hliqjkuovku7YgKi9cbiAgICBoYW5kbGVTbGlkZShpc0Rvd246IGJvb2xlYW4pIHtcbiAgICAgIGNvbnN0IHMgPSB0aGlzLmRhdGEuc2hvd1BvcFxuICAgICAgY29uc3QgaXNCb3R0b20gPSB0aGlzLmRhdGEuaXNCb3R0b21cbiAgICAgIGNvbnN0IGlzQXJyb3dEb3duID0gKChzICYmIGlzQm90dG9tKSB8fCAhKHMgfHwgaXNCb3R0b20pKVxuICAgICAgaWYgKGlzQXJyb3dEb3duID09PSBpc0Rvd24pIHtcbiAgICAgICAgdGhpcy5vblN3aXRjaFBvcCgpXG4gICAgICB9XG4gICAgfSxcbiAgfVxuXG59KVxuIl19