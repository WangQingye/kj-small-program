"use strict";
Component({
    properties: {
        config: {
            type: Object,
            value: null
        }
    },
    data: {
        contents: [],
        showPop: false,
        arrowStyle: '',
        popAnim: '',
        parallaxAnim: '',
        popStyle: '',
    },
    observers: {
        'config': function ({ content, text_style }) {
            const isBottom = text_style === 5;
            const posName = isBottom ? 'bottom' : 'top';
            const per = isBottom ? '100%' : '-100%';
            const popStyle = `${posName}:0rpx;transform:translate(0,${per});`;
            const contents = content.split('\n');
            this.setData({
                contents,
                popStyle,
                isBottom
            });
            this.setArrowStyle();
        },
        'showPop': function (b) {
            const isBottom = this.data.isBottom;
            const posName = isBottom ? 'bottom' : 'top';
            const name = `${b ? 'show' : 'hide'}-${posName}`;
            const popAnim = `animation: ${name} 0.5s ease 1 forwards;`;
            const parallaxAnim = `animation: parallax-${name} 0.5s ease 1 forwards;`;
            this.setData({
                popAnim,
                parallaxAnim
            });
        },
    },
    methods: {
        setFrame() { },
        setEnter() { },
        setExit() {
        },
        onSwitchPop() {
            this.setData({
                showPop: !this.data.showPop
            });
            this.setArrowStyle();
        },
        setArrowStyle() {
            const s = this.data.showPop;
            const isBottom = this.data.isBottom;
            const posName = isBottom ? 'bottom' : 'top';
            const scale = ((s && isBottom) || !(s || isBottom)) ? 1 : -1;
            const arrowStyle = `${posName}:100%;transform: scaleY(${scale});`;
            this.setData({
                arrowStyle
            });
        },
        onTouchStart(e) {
            const { pageY } = e.touches[0];
            this.setData({
                touchPos: pageY,
                touchTs: Date.now(),
            });
        },
        onTouchEnd(e) {
            const { pageY } = e.changedTouches[0];
            const ts = Date.now();
            const { touchPos, touchTs } = this.data;
            let dis = pageY - touchPos;
            if ((ts - touchTs < 1000) && Math.abs(dis) > 60) {
                this.handleSlide(dis > 0);
            }
        },
        handleSlide(isDown) {
            const s = this.data.showPop;
            const isBottom = this.data.isBottom;
            const isArrowDown = ((s && isBottom) || !(s || isBottom));
            if (isArrowDown === isDown) {
                this.onSwitchPop();
            }
        },
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5b3V0Mi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImxheW91dDIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLFNBQVMsQ0FBQztJQUdSLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRTtZQUNOLElBQUksRUFBRSxNQUFNO1lBQ1osS0FBSyxFQUFFLElBQUk7U0FDWjtLQUNGO0lBR0QsSUFBSSxFQUFFO1FBQ0osUUFBUSxFQUFFLEVBQUU7UUFDWixPQUFPLEVBQUUsS0FBSztRQUVkLFVBQVUsRUFBRSxFQUFFO1FBRWQsT0FBTyxFQUFFLEVBQUU7UUFDWCxZQUFZLEVBQUUsRUFBRTtRQUVoQixRQUFRLEVBQUUsRUFBRTtLQUNiO0lBRUQsU0FBUyxFQUFFO1FBQ1QsUUFBUSxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFO1lBQ3pDLE1BQU0sUUFBUSxHQUFHLFVBQVUsS0FBSyxDQUFDLENBQUE7WUFDakMsTUFBTSxPQUFPLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQTtZQUMzQyxNQUFNLEdBQUcsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFBO1lBQ3ZDLE1BQU0sUUFBUSxHQUFHLEdBQUcsT0FBTywrQkFBK0IsR0FBRyxJQUFJLENBQUE7WUFDakUsTUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQTtZQUNwQyxJQUFJLENBQUMsT0FBTyxDQUFDO2dCQUNYLFFBQVE7Z0JBQ1IsUUFBUTtnQkFDUixRQUFRO2FBQ1QsQ0FBQyxDQUFBO1lBQ0YsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFBO1FBQ3RCLENBQUM7UUFDRCxTQUFTLEVBQUUsVUFBVSxDQUFDO1lBQ3BCLE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFBO1lBQ25DLE1BQU0sT0FBTyxHQUFHLFFB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MUIsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFBO2FBQ25CO1FBQ0gsQ0FBQztLQUNGO0NBRUYsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiQ29tcG9uZW50KHtcblxuICAvKiog57uE5Lu255qE5bGe5oCn5YiX6KGoICovXG4gIHByb3BlcnRpZXM6IHtcbiAgICBjb25maWc6IHtcbiAgICAgIHR5cGU6IE9iamVjdCxcbiAgICAgIHZhbHVlOiBudWxsXG4gICAgfVxuICB9LFxuXG4gIC8qKiDnu4Tku7bnmoTliJ3lp4vmlbDmja4gKi9cbiAgZGF0YToge1xuICAgIGNvbnRlbnRzOiBbXSxcbiAgICBzaG93UG9wOiBmYWxzZSxcbiAgICAvKiog566t5aS05Yqo55S75qC35byPICovXG4gICAgYXJyb3dTdHlsZTogJycsXG4gICAgLyoqIHBvcOWKqOeUu+exuyAqL1xuICAgIHBvcEFuaW06ICcnLFxuICAgIHBhcmFsbGF4QW5pbTogJycsXG4gICAgLyoqIHBvcOWfuuehgOagt+W8jyAqL1xuICAgIHBvcFN0eWxlOiAnJyxcbiAgfSxcblxuICBvYnNlcnZlcnM6IHtcbiAgICAnY29uZmlnJzogZnVuY3Rpb24gKHsgY29udGVudCwgdGV4dF9zdHlsZSB9KSB7XG4gICAgICBjb25zdCBpc0JvdHRvbSA9IHRleHRfc3R5bGUgPT09IDVcbiAgICAgIGNvbnN0IHBvc05hbWUgPSBpc0JvdHRvbSA/ICdib3R0b20nIDogJ3RvcCdcbiAgICAgIGNvbnN0IHBlciA9IGlzQm90dG9tID8gJzEwMCUnIDogJy0xMDAlJ1xuICAgICAgY29uc3QgcG9wU3R5bGUgPSBgJHtwb3NOYW1lfTowcnB4O3RyYW5zZm9ybTp0cmFuc2xhdGUoMCwke3Blcn0pO2BcbiAgICAgIGNvbnN0IGNvbnRlbnRzID0gY29udGVudC5zcGxpdCgnXFxuJylcbiAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgIGNvbnRlbnRzLFxuICAgICAgICBwb3BTdHlsZSxcbiAgICAgICAgaXNCb3R0b21cbiAgICAgIH0pXG4gICAgICB0aGlzLnNldEFycm93U3R5bGUoKVxuICAgIH0sXG4gICAgJ3Nob3dQb3AnOiBmdW5jdGlvbiAoYikge1xuICAgICAgY29uc3QgaXNCb3R0b20gPSB0aGlzLmRhdGEuaXNCb3R0b21cbiAgICAgIGNvbnN0IHBvc05hbWUgPSBpc0JvdHRvbSA/ICdib3R0b20nIDogJ3RvcCdcbiAgICAgIGNvbnN0IG5hbWUgPSBgJHtiID8gJ3Nob3cnIDogJ2hpZGUnfS0ke3Bvc05hbWV9YFxuICAgICAgY29uc3QgcG9wQW5pbSA9IGBhbmltYXRpb246ICR7bmFtZX0gMC41cyBlYXNlIDEgZm9yd2FyZHM7YFxuICAgICAgY29uc3QgcGFyYWxsYXhBbmltID0gYGFuaW1hdGlvbjogcGFyYWxsYXgtJHtuYW1lfSAwLjVzIGVhc2UgMSBmb3J3YXJkcztgXG4gICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICBwb3BBbmltLFxuICAgICAgICBwYXJhbGxheEFuaW1cbiAgICAgIH0pXG4gICAgfSxcbiAgfSxcblxuICAvKiog57uE5Lu255qE5pa55rOV5YiX6KGoICovXG4gIG1ldGhvZHM6IHtcbiAgICAvKiog6L+b5YWl5ZKM6YCA5Ye655qE57yT5Yqo5Yqo55S7ICovXG4gICAgc2V0RnJhbWUoKSB7IH0sXG4gICAgLyoqIOmhtemdoui/m+WFpSAqL1xuICAgIHNldEVudGVyKCkgeyB9LFxuICAgIC8qKiDpobXpnaLpgIDlh7ogKi9cbiAgICBzZXRFeGl0KCkge1xuICAgICAgLy8gaWYgKHRoaXMuZGF0YS5zaG93UG9wKSB7XG4gICAgICAvLyAgIHRoaXMub25Td2l0Y2hQb3AoKVxuICAgICAgLy8gfVxuICAgIH0sXG4gICAgLyoqIOWxleW8gOaIluaUtui1t3BvcCAqL1xuICAgIG9uU3dpdGNoUG9wKCkge1xuICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgc2hvd1BvcDogIXRoaXMuZGF0YS5zaG93UG9wXG4gICAgICB9KVxuICAgICAgdGhpcy5zZXRBcnJvd1N0eWxlKClcbiAgICB9LFxuICAgIC8qKiDorr7nva7nrq3lpLTmoLflvI8gKi9cbiAgICBzZXRBcnJvd1N0eWxlKCkge1xuICAgICAgY29uc3QgcyA9IHRoaXMuZGF0YS5zaG93UG9wXG4gICAgICBjb25zdCBpc0JvdHRvbSA9IHRoaXMuZGF0YS5pc0JvdHRvbVxuICAgICAgY29uc3QgcG9zTmFtZSA9IGlzQm90dG9tID8gJ2JvdHRvbScgOiAndG9wJ1xuICAgICAgY29uc3Qgc2NhbGUgPSAoKHMgJiYgaXNCb3R0b20pIHx8ICEocyB8fCBpc0JvdHRvbSkpID8gMSA6IC0xXG4gICAgICBjb25zdCBhcnJvd1N0eWxlID0gYCR7cG9zTmFtZX06MTAwJTt0cmFuc2Zvcm06IHNjYWxlWSgke3NjYWxlfSk7YFxuICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgYXJyb3dTdHlsZVxuICAgICAgfSlcbiAgICB9LFxuICAgIC8qKiDmu5HliqjlvIDlp4sgKi9cbiAgICBvblRvdWNoU3RhcnQoZSkge1xuICAgICAgY29uc3QgeyBwYWdlWSB9ID0gZS50b3VjaGVzWzBdXG4gICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICB0b3VjaFBvczogcGFnZVksXG4gICAgICAgIHRvdWNoVHM6IERhdGUubm93KCksXG4gICAgICB9KVxuICAgIH0sXG4gICAgLyoqIOa7keWKqOe7k+adnyAqL1xuICAgIG9uVG91Y2hFbmQoZSkge1xuICAgICAgY29uc3QgeyBwYWdlWSB9ID0gZS5jaGFuZ2VkVG91Y2hlc1swXVxuICAgICAgY29uc3QgdHMgPSBEYXRlLm5vdygpXG4gICAgICBjb25zdCB7IHRvdWNoUG9zLCB0b3VjaFRzIH0gPSB0aGlzLmRhdGFcbiAgICAgIGxldCBkaXMgPSBwYWdlWSAtIHRvdWNoUG9zXG4gICAgICBpZiAoKHRzIC0gdG91Y2hUcyA8IDEwMDApICYmIE1hdGguYWJzKGRpcykgPiA2MCkge1xuICAgICAgICB0aGlzLmhhbmRsZVNsaWRlKGRpcyA+IDApXG4gICAgICB9XG4gICAgfSxcbiAgICAvKiog5aSE55CG5ruR5Yqo5LqL5Lu2ICovXG4gICAgaGFuZGxlU2xpZGUoaXNEb3duOiBib29sZWFuKSB7XG4gICAgICBjb25zdCBzID0gdGhpcy5kYXRhLnNob3dQb3BcbiAgICAgIGNvbnN0IGlzQm90dG9tID0gdGhpcy5kYXRhLmlzQm90dG9tXG4gICAgICBjb25zdCBpc0Fycm93RG93biA9ICgocyAmJiBpc0JvdHRvbSkgfHwgIShzIHx8IGlzQm90dG9tKSlcbiAgICAgIGlmIChpc0Fycm93RG93biA9PT0gaXNEb3duKSB7XG4gICAgICAgIHRoaXMub25Td2l0Y2hQb3AoKVxuICAgICAgfVxuICAgIH0sXG4gIH1cblxufSlcbiJdfQ==